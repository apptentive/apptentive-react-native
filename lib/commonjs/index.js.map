{"version":3,"names":["_reactNative","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","LINKING_ERROR","Platform","select","ios","default","ApptentiveModule","NativeModules","Proxy","get","Error","_onUnreadMessageCountChanged","_eventsRegistered","ApptentiveConfiguration","constructor","signature","apptentiveKey","apptentiveSignature","logLevel","distributionName","distributionVersion","version","shouldEncryptStorage","shouldSanitizeLogMessages","shouldInheritAppTheme","ratingInteractionThrottleLength","customAppStoreURL","exports","Apptentive","register","configuration","emitter","NativeEventEmitter","android","DeviceEventEmitter","addListener","unreadMessageCountChangedEvent","e","count","engage","event","presentMessageCenter","showMessageCenter","setPersonName","name","getPersonName","setPersonEmail","email","getPersonEmail","addCustomPersonData","OS","addCustomPersonDataBoolean","addCustomPersonDataNumber","addCustomPersonDataString","Promise","_","reject","addCustomPersonDataBool","removeCustomPersonData","addCustomDeviceData","addCustomDeviceDataBoolean","addCustomDeviceDataNumber","addCustomDeviceDataString","addCustomDeviceDataBool","removeCustomDeviceData","canShowInteraction","canShowMessageCenter","getUnreadMessageCount","onUnreadMessageCountChanged"],"sources":["index.tsx"],"sourcesContent":["import { NativeModules, Platform, DeviceEventEmitter, NativeEventEmitter } from 'react-native';\n\nconst LINKING_ERROR =\n  `The package 'apptentive-react-native' is not linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo Go\\n';\n\n// Get the Apptentive Native Module\nconst ApptentiveModule = NativeModules.ApptentiveModule\n  ? NativeModules.ApptentiveModule\n  : new Proxy({},{ get() {\n          throw new Error(LINKING_ERROR);\n        },});\n\nlet _onUnreadMessageCountChanged: (count: number) => {};\nlet _eventsRegistered = false;\n\n///// Class Implementation\n\nexport class ApptentiveConfiguration {\n\n  apptentiveKey: string;\n  apptentiveSignature: string;\n  logLevel: string;\n  distributionName: string;\n  distributionVersion: string;\n  shouldEncryptStorage: boolean;\n  shouldSanitizeLogMessages: boolean;\n  shouldInheritAppTheme: boolean;\n  ratingInteractionThrottleLength: number;\n  customAppStoreURL: string | null;\n\n  constructor(key: string, signature: string) {\n    this.apptentiveKey = key;\n    this.apptentiveSignature = signature;\n    this.logLevel = \"info\";\n    this.distributionName = \"React Native\";\n    this.distributionVersion = require(\"../package\").version;\n    this.shouldEncryptStorage = false;\n    this.shouldSanitizeLogMessages = true;\n    this.shouldInheritAppTheme = true;\n    this.ratingInteractionThrottleLength = 604800000;\n    this.customAppStoreURL = null;\n  }\n}\n\nexport class Apptentive {\n\n  // Register the Apptentive SDK\n  static register(configuration: ApptentiveConfiguration): Promise<boolean> {\n    if (!_eventsRegistered) {\n      _eventsRegistered = true;\n\n      const emitter = Platform.select({\n        ios: () => new NativeEventEmitter(ApptentiveModule),\n        android: () => DeviceEventEmitter,\n        default: () => DeviceEventEmitter\n      })();\n\n      emitter.addListener(ApptentiveModule.unreadMessageCountChangedEvent, (e) => {\n        if (_onUnreadMessageCountChanged !== undefined) {\n          _onUnreadMessageCountChanged(e.count);\n        }\n      });\n    }\n\n    return ApptentiveModule.register(configuration);\n  }\n\n  // Engage an event by an event name string\n  static engage(event: string): Promise<boolean> {\n    return ApptentiveModule.engage(event);\n  }\n\n  // Present the Message Center\n  static presentMessageCenter(): Promise<boolean> {\n    return ApptentiveModule.showMessageCenter();\n  }\n\n  // Set person name\n  static setPersonName(name: string): Promise<boolean> {\n    return ApptentiveModule.setPersonName(name);\n  }\n\n  // Get person name\n  static getPersonName(): Promise<string> {\n    return ApptentiveModule.getPersonName();\n  }\n\n  // Set person email\n  static setPersonEmail(email: string): Promise<boolean> {\n    return ApptentiveModule.setPersonEmail(email);\n  }\n\n  // Get person name\n  static getPersonEmail(): Promise<string> {\n    return ApptentiveModule.getPersonEmail();\n  }\n\n  // Add person custom data based on key string and value of type bool, number, or string\n  static addCustomPersonData(key: string, value: any): Promise<boolean> {\n    if (Platform.OS === \"ios\") {\n      return ApptentiveModule.addCustomPersonData(key, value);\n    }\n    else if (Platform.OS === \"android\") {\n      if (typeof value === 'boolean') {\n        return ApptentiveModule.addCustomPersonDataBoolean(key, value);\n      }\n      if (typeof value === 'number') {\n        return ApptentiveModule.addCustomPersonDataNumber(key, value);\n      }\n      if (typeof value === 'string') {\n        return ApptentiveModule.addCustomPersonDataString(key, value);\n      }\n    } else {\n      // Return a default rejected Promise if platform is not supported\n      return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported platform: \" + (Platform.OS));});\n    }\n    // Return a default rejected Promise if type is not supported\n    return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported type of custom data: \" + (typeof value));});\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataBool(key: string, value: boolean) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataNumber(key: string, value: number) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataString(key: string, value: string) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  // Remove person custom data based on key string\n  static removeCustomPersonData(key: string): Promise<boolean> {\n    return ApptentiveModule.removeCustomPersonData(key);\n  }\n\n  // Add device custom data based on key string and value of type bool, number, or string\n  static addCustomDeviceData(key: string, value: any): Promise<boolean> {\n    if (Platform.OS === \"ios\") {\n      return ApptentiveModule.addCustomDeviceData(key, value);\n    }\n    else if (Platform.OS === \"android\") {\n      if (typeof value === 'boolean') {\n        return ApptentiveModule.addCustomDeviceDataBoolean(key, value);\n      }\n      if (typeof value === 'number') {\n        return ApptentiveModule.addCustomDeviceDataNumber(key, value);\n      }\n      if (typeof value === 'string') {\n        return ApptentiveModule.addCustomDeviceDataString(key, value);\n      }\n    } else {\n      // Return a default rejected Promise if platform is not supported\n      return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported platform: \" + (Platform.OS));});\n    }\n    // Return a default rejected Promise if type is not supported\n    return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported type of custom data: \" + (typeof value));});\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataBool(key: string, value: boolean) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataNumber(key: string, value: number) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataString(key: string, value: string) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  // Remove device custom data based on key string\n  static removeCustomDeviceData(key: string): Promise<boolean> {\n    return ApptentiveModule.removeCustomDeviceData(key);\n  }\n\n  // Check if an event name will launch an interaction\n  static canShowInteraction(event: string): Promise<boolean> {\n    return ApptentiveModule.canShowInteraction(event);\n  }\n\n  // Check if Message Center can be shown\n  static canShowMessageCenter(): Promise<boolean> {\n    return ApptentiveModule.canShowMessageCenter();\n  }\n\n  // Get unread message count in Message Center\n  static getUnreadMessageCount(): Promise<number> {\n    return ApptentiveModule.getUnreadMessageCount();\n  }\n\n  /**\n   * @return Current callback for the unread message count change in the Message Center.\n   */\n  static get onUnreadMessageCountChanged() {\n    return _onUnreadMessageCountChanged;\n  }\n\n  /**\n   * Sets current callback for the unread message count change in the Message Center.\n   * @param value Callback function with a single integer parameter.\n   */\n  static set onUnreadMessageCountChanged(value) {\n    _onUnreadMessageCountChanged = value;\n  }\n\n}\n"],"mappings":"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"}